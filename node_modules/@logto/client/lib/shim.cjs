'use strict';

var js = require('@logto/js');
var errors = require('./errors.cjs');
require('@silverhand/essentials');
var types = require('./adapter/types.cjs');
var requester = require('./utils/requester.cjs');
var index = require('./types/index.cjs');
var client = require('./client.cjs');



Object.defineProperty(exports, "LogtoError", {
	enumerable: true,
	get: function () { return js.LogtoError; }
});
Object.defineProperty(exports, "LogtoRequestError", {
	enumerable: true,
	get: function () { return js.LogtoRequestError; }
});
Object.defineProperty(exports, "OidcError", {
	enumerable: true,
	get: function () { return js.OidcError; }
});
Object.defineProperty(exports, "Prompt", {
	enumerable: true,
	get: function () { return js.Prompt; }
});
Object.defineProperty(exports, "ReservedResource", {
	enumerable: true,
	get: function () { return js.ReservedResource; }
});
Object.defineProperty(exports, "ReservedScope", {
	enumerable: true,
	get: function () { return js.ReservedScope; }
});
Object.defineProperty(exports, "UserScope", {
	enumerable: true,
	get: function () { return js.UserScope; }
});
Object.defineProperty(exports, "buildOrganizationUrn", {
	enumerable: true,
	get: function () { return js.buildOrganizationUrn; }
});
Object.defineProperty(exports, "getOrganizationIdFromUrn", {
	enumerable: true,
	get: function () { return js.getOrganizationIdFromUrn; }
});
Object.defineProperty(exports, "isLogtoRequestError", {
	enumerable: true,
	get: function () { return js.isLogtoRequestError; }
});
Object.defineProperty(exports, "organizationUrnPrefix", {
	enumerable: true,
	get: function () { return js.organizationUrnPrefix; }
});
exports.LogtoClientError = errors.LogtoClientError;
Object.defineProperty(exports, "CacheKey", {
	enumerable: true,
	get: function () { return types.CacheKey; }
});
Object.defineProperty(exports, "PersistKey", {
	enumerable: true,
	get: function () { return types.PersistKey; }
});
exports.createRequester = requester.createRequester;
exports.isLogtoAccessTokenMap = index.isLogtoAccessTokenMap;
exports.isLogtoSignInSessionItem = index.isLogtoSignInSessionItem;
exports.normalizeLogtoConfig = index.normalizeLogtoConfig;
exports.StandardLogtoClient = client.StandardLogtoClient;
